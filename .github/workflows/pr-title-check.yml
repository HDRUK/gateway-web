name: PR Title Validation

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  check-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title Format
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          REPO="${{ github.repository }}"

          echo "PR Title: $TITLE"

          # Define PR title regex pattern (allows breaking changes with !)
          if echo "$TITLE" | grep -E -q "^(feat|fix|chore|docs|style|refactor|test|perf)(!?)\(GAT-[0-9]+\): .+$"; then
            echo "‚úÖ PR title is valid!"

            COMMENT="üéâ **Great job!** Your PR title follows the correct format. üöÄ"
            EXISTING_COMMENT=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments" | jq -r '.[] | select(.body | contains("Great job!")) | .id')

            if [[ -z "$EXISTING_COMMENT" ]]; then
              curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments" \
                -d "{\"body\": \"$COMMENT\"}"
            fi

          else
            echo "‚ùå Invalid PR title format!"

            COMMENT="üö® **Invalid PR title format!**\n\nYour PR title must follow one of these formats:\n- \`feat(GAT-1234): Your title\`\n- \`fix!(GAT-5678): Breaking change\`\n\nPlease update your PR title accordingly. üòä"
            
            curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments" \
              -d "{\"body\": \"$COMMENT\"}"

            exit 1
          fi
