name: Run quality checks
run-name: ${{ github.actor }} triggered quality check pipeline
on:
  push:
    branches:
      - dev
      - staging
      - main
    paths:
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - 'package.json'
      - 'jest.config.*'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - 'package.json'
      - 'jest.config.*'
      - '.github/workflows/**'

env:
  SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL}}'
  SLACK_CHANNEL: '${{ secrets.GITHUBACTIONS_SLACK_CHANNEL }}'

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: |-
      ${{
         github.ref_name == 'dev' && 'dev'
      || github.base_ref == 'dev' && 'dev'
      ||                             'release'
      }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Use Node.js and cache dependencies
        uses: actions/setup-node@v4
        with:
          cache: 'npm'

      - name: Install dependencies
        id: npminstall
        run: npm ci

      - name: Check if code changed
        id: codecheck
        run: |
          echo "Detecting code changes..."
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }} --depth=1
            BASE=origin/${{ github.base_ref }}
          else
            BASE=$(git rev-parse HEAD~1)
          fi

          CHANGED=$(git diff --name-only $BASE HEAD -- '*.js' '*.ts' '*.tsx' 'package.json' 'jest.config.*')
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT

          if [ -z "$CHANGED" ]; then
            echo "No relevant code changes detected."
          else
            echo "Changes detected in:"
            echo "$CHANGED"
          fi

      - name: Restore Jest cache
        if: steps.codecheck.outputs.changed_files != ''
        uses: actions/cache@v4
        with:
            path: |
              .jest-cache/
              node_modules/.cache/jest
            key: ${{ runner.os }}-jest-${{ hashFiles('**/*.test.ts', '**/jest.config.js') }}
            restore-keys: |
              ${{ runner.os }}-jest-

      - name: List Jest cache contents
        if: steps.codecheck.outputs.changed_files != ''
        run: ls -la .jest-cache || echo "No Jest cache found"

      - name: Run lint
        id: runlint
        if: steps.codecheck.outputs.changed_files != ''
        run: npm run lint

      - name: Run unit tests
        if: steps.codecheck.outputs.changed_files != ''
        run: npm run test:ci

      - name: Run Notification
        id: runnotificationsent
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Running CI tests on {{ env.GITHUB_REF_NAME }} branch ${{ job.status }}
        if: always()