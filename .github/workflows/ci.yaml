name: Run quality checks
run-name: ${{ github.actor }} triggered quality check pipeline
on:
  push:
    branches:
      - dev
      - staging
      - main
  pull_request:
    branches:
      - main
      - dev

env:
  SLACK_WEBHOOK_URL: '${{ secrets.SLACK_WEBHOOK_URL}}'
  SLACK_CHANNEL: '${{ secrets.GITHUBACTIONS_SLACK_CHANNEL }}'

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: |-
      ${{
         github.ref_name == 'dev' && 'dev'
      || github.base_ref == 'dev' && 'dev'
      ||                             'release'
      }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Use Node.js and cache dependencies
        uses: actions/setup-node@v4
        with:
          cache: 'npm'

      - name: Install dependencies
        id: npminstall
        run: npm ci

      - name: Cache Jest cache
        uses: actions/cache@v4
        with:
          path: |
            .jest-cache/
            node_modules/.cache/jest
          key: ${{ runner.os }}-jest-${{ hashFiles('**/*.test.ts', '**/jest.config.js') }}
          restore-keys: |
            ${{ runner.os }}-jest-

      - name: Run lint
        id: runlint
        run: "npm run lint"

      - name: Run unit tests
        id: unittests
        run: "npm run test:ci"

      - name: Run Notification
        id: runnotificationsent
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Running CI tests on {{ env.GITHUB_REF_NAME }} branch ${{ job.status }}
        if: always()