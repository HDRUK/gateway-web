name: Build and deploy to DEV
run-name: ${{ github.actor }} triggered deploy to DEV pipeline

on:
    push:
        branches:
            - "fix/GAT-3456"

env:
    PROJECT_ID: "${{ secrets.PROJECT_ID }}"
    GAR_LOCATION: "${{ secrets.GAR_LOCATION }}"

jobs:
    build:
        permissions:
            contents: write
            id-token: write

        runs-on: ubuntu-latest
        environment: dev
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: "fix/GAT-3456"

            - name: Read VERSION file
              id: getversion
              run: echo "version=$(cat version.yaml)" >> $GITHUB_OUTPUT

            - name: Google Auth
              id: auth
              uses: "google-github-actions/auth@v2"
              with:
                  token_format: "access_token"
                  workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
                  service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

            - name: Login to GAR
              id: garlogin
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.PROJECT_ID }}
                  username: oauth2accesstoken
                  password: ${{ steps.auth.outputs.access_token }}

            - name: Build and Push Container
              id: build
              shell: bash
              env:
                  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
                  PROJECT_ID: ${{ secrets.PROJECT_ID }}
                  GAR_NAME: ${{ secrets.GAR_NAME_WEB }}

              run: |-
                  docker build -t '${{ env.GAR_LOCATION }}'-docker.pkg.dev/'${{ env.PROJECT_ID }}'/'${{ env.GAR_NAME }}'/${{ steps.getversion.outputs.version }}:${{ github.sha }} -t '${{ env.GAR_LOCATION }}'-docker.pkg.dev/'${{ env.PROJECT_ID }}'/'${{ env.GAR_NAME }}'/${{ steps.getversion.outputs.version }}:latest --build-arg NEXT_PUBLIC_API_V1_URL=${{ vars.NEXT_PUBLIC_API_V1_URL }} --build-arg NEXT_PUBLIC_API_V1_IP_URL=${{ vars.NEXT_PUBLIC_API_V1_IP_URL }} --build-arg NEXT_PUBLIC_WORDPRESS_API_URL=${{ vars.NEXT_PUBLIC_WORDPRESS_API_URL }} --build-arg NEXT_PUBLIC_SERVICE_DESK_URL=${{ vars.NEXT_PUBLIC_SERVICE_DESK_URL }} --build-arg NEXT_PUBLIC_GATEWAY_URL=${{ vars.NEXT_PUBLIC_GATEWAY_URL }} --build-arg NEXT_PUBLIC_HOTJAR_ID=${{ vars.NEXT_PUBLIC_HOTJAR_ID }} ./
                  docker push --all-tags '${{ env.GAR_LOCATION }}'-docker.pkg.dev/'${{ env.PROJECT_ID }}'/'${{ env.GAR_NAME }}'/${{ steps.getversion.outputs.version }}

    deploy:
        needs: build
        permissions:
            contents: write
            id-token: write

        runs-on: ubuntu-latest
        environment: dev
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: "fix/GAT-3456"

            - name: Google Auth
              id: auth
              uses: "google-github-actions/auth@v2"
              with:
                  token_format: "access_token"
                  workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
                  service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

            - name: Read VERSION file
              id: getversion
              run: echo "version=$(cat version.yaml)" >> $GITHUB_OUTPUT

            - name: Deploy to Cloud Run
              uses: actions-hub/gcloud@master
              id: deploy
              env:
                  PROJECT_ID: ${{ secrets.PROJECT_ID }}
                  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
                  GAR_NAME: ${{ secrets.GAR_NAME_WEB }}
                  SERVICE_NAME: "${{ secrets.SERVICE_NAME_WEB }}"
                  SERVICE_REGION: "${{ secrets.SERVICE_REGION_WEB }}"

              with:
                  args: run services update '${{ env.SERVICE_NAME }}' --image='${{ env.GAR_LOCATION }}'-docker.pkg.dev/'${{ env.PROJECT_ID }}'/'${{ env.GAR_NAME }}'/${{ steps.getversion.outputs.version }}:${{ github.sha }} --region='${{ env.SERVICE_REGION }}' --project='${{ env.PROJECT_ID }}'
